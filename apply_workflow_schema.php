<?php
/**
 * Apply Workflow Schema Changes
 * ‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Workflow
 */

require_once __DIR__ . '/config/config.php';
require_once __DIR__ . '/app/core/Database.php';

echo "<h1>üîß Apply Workflow Schema Changes</h1>";

try {
    $db = new Database();
    
    echo "<h2>1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô</h2>";
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
    $structure = $db->fetchAll("DESCRIBE customers");
    $existingColumns = array_column($structure, 'Field');
    
    $requiredColumns = ['basket_type', 'assigned_at', 'assigned_to', 'recall_at', 'customer_time_expiry', 'customer_time_extension'];
    $missingColumns = array_diff($requiredColumns, $existingColumns);
    
    echo "<p><strong>‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà:</strong> " . implode(', ', $existingColumns) . "</p>";
    echo "<p><strong>‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢‡πÑ‡∏õ:</strong> " . (empty($missingColumns) ? "‡πÑ‡∏°‡πà‡∏°‡∏µ" : implode(', ', $missingColumns)) . "</p>";
    
    if (empty($missingColumns)) {
        echo "<p>‚úÖ ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß</p>";
    } else {
        echo "<h2>2. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢‡πÑ‡∏õ</h2>";
        
        $sqlCommands = [];
        
        if (in_array('basket_type', $missingColumns)) {
            $sqlCommands[] = "ALTER TABLE customers ADD COLUMN basket_type ENUM('distribution', 'assigned', 'waiting') DEFAULT 'distribution' COMMENT '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤'";
        }
        
        if (in_array('assigned_at', $missingColumns)) {
            $sqlCommands[] = "ALTER TABLE customers ADD COLUMN assigned_at DATETIME NULL COMMENT '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤'";
        }
        
        if (in_array('assigned_to', $missingColumns)) {
            $sqlCommands[] = "ALTER TABLE customers ADD COLUMN assigned_to INT NULL COMMENT 'ID ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏•‡∏™‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢'";
        }
        
        if (in_array('recall_at', $missingColumns)) {
            $sqlCommands[] = "ALTER TABLE customers ADD COLUMN recall_at DATETIME NULL COMMENT '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Ñ‡∏∑‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤'";
        }
        
        if (in_array('customer_time_expiry', $missingColumns)) {
            $sqlCommands[] = "ALTER TABLE customers ADD COLUMN customer_time_expiry DATETIME NULL COMMENT '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤'";
        }
        
        if (in_array('customer_time_extension', $missingColumns)) {
            $sqlCommands[] = "ALTER TABLE customers ADD COLUMN customer_time_extension INT DEFAULT 0 COMMENT '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πà‡∏≠‡πÄ‡∏ß‡∏•‡∏≤'";
        }
        
        foreach ($sqlCommands as $sql) {
            try {
                echo "<p>‡∏£‡∏±‡∏ô: <code>" . htmlspecialchars($sql) . "</code></p>";
                $db->execute($sql);
                echo "<p>‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</p>";
            } catch (Exception $e) {
                echo "<p>‚ùå ‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " . $e->getMessage() . "</p>";
            }
        }
        
        echo "<h2>3. ‡πÄ‡∏û‡∏¥‡πà‡∏° Index</h2>";
        
        $indexCommands = [
            "CREATE INDEX idx_customers_basket_type ON customers(basket_type)",
            "CREATE INDEX idx_customers_assigned_at ON customers(assigned_at)",
            "CREATE INDEX idx_customers_assigned_to ON customers(assigned_to)",
            "CREATE INDEX idx_customers_recall_at ON customers(recall_at)"
        ];
        
        foreach ($indexCommands as $sql) {
            try {
                echo "<p>‡∏£‡∏±‡∏ô: <code>" . htmlspecialchars($sql) . "</code></p>";
                $db->execute($sql);
                echo "<p>‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</p>";
            } catch (Exception $e) {
                echo "<p>‚ö†Ô∏è ‡∏≠‡∏≤‡∏à‡∏°‡∏µ Index ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß: " . $e->getMessage() . "</p>";
            }
        }
        
        echo "<h2>4. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô</h2>";
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå assigned_to ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        $hasAssignedTo = in_array('assigned_to', $existingColumns) || in_array('assigned_to', $requiredColumns);
        
        if ($hasAssignedTo) {
            try {
                // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ assigned_to ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô assigned
                $sql1 = "UPDATE customers 
                        SET basket_type = 'assigned', 
                            assigned_at = COALESCE(assigned_at, created_at, NOW())
                        WHERE assigned_to IS NOT NULL AND (basket_type IS NULL OR basket_type = 'distribution')";
                
                echo "<p>‡∏£‡∏±‡∏ô: <code>" . htmlspecialchars($sql1) . "</code></p>";
                $result1 = $db->execute($sql1);
                echo "<p>‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï assigned customers: " . $result1 . " ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>";
                
                // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ assigned_to ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô distribution
                $sql2 = "UPDATE customers 
                        SET basket_type = 'distribution'
                        WHERE assigned_to IS NULL AND (basket_type IS NULL OR basket_type = '')";
                
                echo "<p>‡∏£‡∏±‡∏ô: <code>" . htmlspecialchars($sql2) . "</code></p>";
                $result2 = $db->execute($sql2);
                echo "<p>‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï distribution customers: " . $result2 . " ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>";
                
            } catch (Exception $e) {
                echo "<p>‚ùå ‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: " . $e->getMessage() . "</p>";
            }
        }
    }
    
    echo "<h2>5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå</h2>";
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    $newStructure = $db->fetchAll("DESCRIBE customers");
    $newColumns = array_column($newStructure, 'Field');
    $stillMissing = array_diff($requiredColumns, $newColumns);
    
    if (empty($stillMissing)) {
        echo "<p>‚úÖ ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡πâ‡∏ß</p>";
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
        $stats = $db->fetchAll("SELECT basket_type, COUNT(*) as count FROM customers GROUP BY basket_type");
        echo "<h3>‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ Basket Type:</h3>";
        echo "<ul>";
        foreach ($stats as $stat) {
            echo "<li><strong>" . htmlspecialchars($stat['basket_type'] ?? 'NULL') . ":</strong> " . $stat['count'] . " ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</li>";
        }
        echo "</ul>";
        
        // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö WorkflowService
        echo "<h3>‡∏ó‡∏î‡∏™‡∏≠‡∏ö WorkflowService:</h3>";
        require_once __DIR__ . '/app/services/WorkflowService.php';
        $workflowService = new WorkflowService();
        $workflowStats = $workflowService->getWorkflowStats();
        
        echo "<pre style='background: #f5f5f5; padding: 10px; border-radius: 5px;'>";
        print_r($workflowStats);
        echo "</pre>";
        
    } else {
        echo "<p>‚ùå ‡∏¢‡∏±‡∏á‡∏Ç‡∏≤‡∏î‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå: " . implode(', ', $stillMissing) . "</p>";
    }
    
} catch (Exception $e) {
    echo "<p><strong>Error:</strong> " . $e->getMessage() . "</p>";
    echo "<pre>" . $e->getTraceAsString() . "</pre>";
}

echo "<p><em>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ‡∏ß‡∏£‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß</em></p>";
?>
