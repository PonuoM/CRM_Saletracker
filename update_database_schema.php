<?php
/**
 * Update Database Schema
 * ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö basket management
 */

// Enable error reporting
error_reporting(E_ALL);
ini_set('display_errors', 1);

require_once 'config/config.php';
require_once 'app/core/Database.php';

echo "<h1>üîß CRM SalesTracker - Database Schema Update</h1>";

try {
    $db = new Database();
    $pdo = $db->getConnection();
    
    echo "<h2>üìã ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h2>";
    
    $updates = [];
    $errors = [];
    
    // 1. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå recall_at ‡πÅ‡∏•‡∏∞ recall_reason ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á customers
    echo "<h3>1. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏£‡∏≤‡∏á customers</h3>";
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå recall_at ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    $sql = "SHOW COLUMNS FROM customers LIKE 'recall_at'";
    $result = $pdo->query($sql);
    
    if ($result->rowCount() == 0) {
        try {
            $sql = "ALTER TABLE customers ADD COLUMN recall_at DATETIME NULL AFTER assigned_at";
            $pdo->exec($sql);
            $updates[] = "‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå recall_at ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á customers";
            echo "<p style='color: green;'>‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå recall_at ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</p>";
        } catch (Exception $e) {
            $errors[] = "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå recall_at: " . $e->getMessage();
            echo "<p style='color: red;'>‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå recall_at: " . $e->getMessage() . "</p>";
        }
    } else {
        echo "<p style='color: blue;'>‚ÑπÔ∏è ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå recall_at ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß</p>";
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå recall_reason ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    $sql = "SHOW COLUMNS FROM customers LIKE 'recall_reason'";
    $result = $pdo->query($sql);
    
    if ($result->rowCount() == 0) {
        try {
            $sql = "ALTER TABLE customers ADD COLUMN recall_reason VARCHAR(100) NULL AFTER recall_at";
            $pdo->exec($sql);
            $updates[] = "‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå recall_reason ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á customers";
            echo "<p style='color: green;'>‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå recall_reason ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</p>";
        } catch (Exception $e) {
            $errors[] = "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå recall_reason: " . $e->getMessage();
            echo "<p style='color: red;'>‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå recall_reason: " . $e->getMessage() . "</p>";
        }
    } else {
        echo "<p style='color: blue;'>‚ÑπÔ∏è ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå recall_reason ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß</p>";
    }
    
    // 1.1 ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï ENUM ‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á orders: payment_status ‡πÅ‡∏•‡∏∞ delivery_status ‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    echo "<h3>1.1 ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏£‡∏≤‡∏á orders (ENUM)</h3>";
    try {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö payment_status
        $col = $pdo->query("SHOW COLUMNS FROM orders LIKE 'payment_status'")->fetch(PDO::FETCH_ASSOC);
        if ($col) {
            $type = strtolower($col['Type'] ?? '');
            // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ pending,paid,partial,cancelled,returned
            if (strpos($type, "'returned'") === false) {
                $sql = "ALTER TABLE orders MODIFY COLUMN payment_status ENUM('pending','paid','partial','cancelled','returned') DEFAULT 'pending'";
                $pdo->exec($sql);
                $updates[] = "‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï ENUM payment_status ‡πÄ‡∏û‡∏¥‡πà‡∏° 'returned'";
                echo "<p style='color: green;'>‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï payment_status ‡πÄ‡∏û‡∏¥‡πà‡∏° 'returned'</p>";
            } else {
                echo "<p style='color: blue;'>‚ÑπÔ∏è payment_status ‡∏°‡∏µ 'returned' ‡πÅ‡∏•‡πâ‡∏ß</p>";
            }
        }

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö delivery_status
        $col2 = $pdo->query("SHOW COLUMNS FROM orders LIKE 'delivery_status'")->fetch(PDO::FETCH_ASSOC);
        if ($col2) {
            $type2 = strtolower($col2['Type'] ?? '');
            // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ pending,confirmed,shipped,delivered,cancelled (‡πÄ‡∏û‡∏¥‡πà‡∏° confirmed)
            $needsAlter = (strpos($type2, "'confirmed'") === false) || (strpos($type2, "'delivered'") === false) || (strpos($type2, "'shipped'") === false) || (strpos($type2, "'pending'") === false) || (strpos($type2, "'cancelled'") === false);
            if ($needsAlter) {
                $sql = "ALTER TABLE orders MODIFY COLUMN delivery_status ENUM('pending','confirmed','shipped','delivered','cancelled') DEFAULT 'pending'";
                $pdo->exec($sql);
                $updates[] = "‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï ENUM delivery_status ‡πÄ‡∏û‡∏¥‡πà‡∏° 'confirmed'";
                echo "<p style='color: green;'>‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï delivery_status ‡πÄ‡∏û‡∏¥‡πà‡∏° 'confirmed'</p>";
            } else {
                echo "<p style='color: blue;'>‚ÑπÔ∏è delivery_status ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß</p>";
            }
        }
    } catch (Exception $e) {
        $errors[] = "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï ENUM orders: " . $e->getMessage();
        echo "<p style='color: red;'>‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï ENUM orders: " . $e->getMessage() . "</p>";
    }

    // 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á cron_job_logs
    echo "<h3>2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á cron_job_logs</h3>";
    
    $sql = "SHOW TABLES LIKE 'cron_job_logs'";
    $result = $pdo->query($sql);
    
    if ($result->rowCount() == 0) {
        try {
            $sql = "CREATE TABLE cron_job_logs (
                log_id INT AUTO_INCREMENT PRIMARY KEY,
                job_name VARCHAR(100) NOT NULL,
                status ENUM('running', 'success', 'failed') NOT NULL,
                start_time DATETIME NOT NULL,
                end_time DATETIME NULL,
                execution_time DECIMAL(10,2) NULL,
                output TEXT NULL,
                error_message TEXT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )";
            $pdo->exec($sql);
            $updates[] = "‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á cron_job_logs";
            echo "<p style='color: green;'>‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á cron_job_logs ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</p>";
        } catch (Exception $e) {
            $errors[] = "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á cron_job_logs: " . $e->getMessage();
            echo "<p style='color: red;'>‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á cron_job_logs: " . $e->getMessage() . "</p>";
        }
    } else {
        echo "<p style='color: blue;'>‚ÑπÔ∏è ‡∏ï‡∏≤‡∏£‡∏≤‡∏á cron_job_logs ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß</p>";
    }
    
    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á cron_job_settings
    echo "<h3>3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á cron_job_settings</h3>";
    
    $sql = "SHOW TABLES LIKE 'cron_job_settings'";
    $result = $pdo->query($sql);
    
    if ($result->rowCount() == 0) {
        try {
            $sql = "CREATE TABLE cron_job_settings (
                setting_id INT AUTO_INCREMENT PRIMARY KEY,
                job_name VARCHAR(100) NOT NULL UNIQUE,
                is_enabled BOOLEAN DEFAULT TRUE,
                last_run DATETIME NULL,
                next_run DATETIME NULL,
                schedule_expression VARCHAR(50) NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
            )";
            $pdo->exec($sql);
            $updates[] = "‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á cron_job_settings";
            echo "<p style='color: green;'>‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á cron_job_settings ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</p>";
            
            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
            $jobs = [
                'run_all_jobs',
                'basket_management',
                'grade_update',
                'temperature_update',
                'recall_list',
                'notifications',
                'call_followup'
            ];
            
            foreach ($jobs as $job) {
                $sql = "INSERT IGNORE INTO cron_job_settings (job_name, schedule_expression) VALUES (?, '20 1 * * *')";
                $stmt = $pdo->prepare($sql);
                $stmt->execute([$job]);
            }
            
            echo "<p style='color: green;'>‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ô cron_job_settings</p>";
            
        } catch (Exception $e) {
            $errors[] = "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á cron_job_settings: " . $e->getMessage();
            echo "<p style='color: red;'>‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á cron_job_settings: " . $e->getMessage() . "</p>";
        }
    } else {
        echo "<p style='color: blue;'>‚ÑπÔ∏è ‡∏ï‡∏≤‡∏£‡∏≤‡∏á cron_job_settings ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß</p>";
    }
    
    // 4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á activity_logs
    echo "<h3>4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á activity_logs</h3>";
    
    $sql = "SHOW TABLES LIKE 'activity_logs'";
    $result = $pdo->query($sql);
    
    if ($result->rowCount() == 0) {
        try {
            $sql = "CREATE TABLE activity_logs (
                log_id INT AUTO_INCREMENT PRIMARY KEY,
                user_id INT NULL,
                activity_type VARCHAR(50) NOT NULL,
                table_name VARCHAR(50) NULL,
                record_id INT NULL,
                action VARCHAR(50) NOT NULL,
                description TEXT NULL,
                old_values JSON NULL,
                new_values JSON NULL,
                ip_address VARCHAR(45) NULL,
                user_agent TEXT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                INDEX idx_activity_type (activity_type),
                INDEX idx_created_at (created_at)
            )";
            $pdo->exec($sql);
            $updates[] = "‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á activity_logs";
            echo "<p style='color: green;'>‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á activity_logs ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</p>";
        } catch (Exception $e) {
            $errors[] = "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á activity_logs: " . $e->getMessage();
            echo "<p style='color: red;'>‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á activity_logs: " . $e->getMessage() . "</p>";
        }
    } else {
        echo "<p style='color: blue;'>‚ÑπÔ∏è ‡∏ï‡∏≤‡∏£‡∏≤‡∏á activity_logs ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß</p>";
    }
    
    // 5. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    echo "<h3>5. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô</h3>";
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ basket_type ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ
    $sql = "UPDATE customers SET basket_type = 'assigned' WHERE basket_type IS NULL OR basket_type = ''";
    $stmt = $pdo->prepare($sql);
    $stmt->execute();
    $updatedCustomers = $stmt->rowCount();
    
    if ($updatedCustomers > 0) {
        echo "<p style='color: green;'>‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï basket_type ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ $updatedCustomers ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>";
        $updates[] = "‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï basket_type ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ $updatedCustomers ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£";
    } else {
        echo "<p style='color: blue;'>‚ÑπÔ∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• basket_type ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡πâ‡∏ß</p>";
    }
    
    // ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
    echo "<h2>üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï</h2>";
    
    if (!empty($updates)) {
        echo "<div style='background: #d4edda; padding: 20px; border-radius: 5px; margin: 20px 0;'>";
        echo "<h3>‚úÖ ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏µ‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</h3>";
        echo "<ul>";
        foreach ($updates as $update) {
            echo "<li>$update</li>";
        }
        echo "</ul>";
        echo "</div>";
    }
    
    if (!empty($errors)) {
        echo "<div style='background: #f8d7da; padding: 20px; border-radius: 5px; margin: 20px 0;'>";
        echo "<h3>‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</h3>";
        echo "<ul>";
        foreach ($errors as $error) {
            echo "<li>$error</li>";
        }
        echo "</ul>";
        echo "</div>";
    }
    
    if (empty($errors)) {
        echo "<div style='background: #d1ecf1; padding: 20px; border-radius: 5px; margin: 20px 0;'>";
        echo "<h3>üéâ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô</h3>";
        echo "<p>‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ô cron jobs ‡πÅ‡∏•‡∏∞‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß</p>";
        echo "<p><strong>‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ:</strong></p>";
        echo "<ol>";
        echo "<li>‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏±‡∏ô cron jobs</li>";
        echo "<li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö log files</li>";
        echo "<li>‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</li>";
        echo "</ol>";
        echo "</div>";
    }
    
} catch (Exception $e) {
    echo "<div style='background: #f8d7da; padding: 20px; border-radius: 5px;'>";
    echo "<h3>‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡πâ‡∏≤‡∏¢</h3>";
    echo "<p>‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ: " . $e->getMessage() . "</p>";
    echo "</div>";
}

// ‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏≥‡∏ó‡∏≤‡∏á
echo "<div style='margin: 20px 0;'>";
echo "<a href='view_cron_database.php' style='background: #28a745; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; margin-right: 10px;'>üóÑÔ∏è ‡∏î‡∏π‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</a>";
echo "<a href='test_cron_jobs.php' style='background: #17a2b8; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; margin-right: 10px;'>üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Cron</a>";
echo "<a href='index.php' style='background: #6c757d; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;'>üè† ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</a>";
echo "</div>";

?>
