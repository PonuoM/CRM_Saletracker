<?php
/**
 * Test API Simulation - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ API importSales
 */

// Start session
session_start();

// Set error reporting
error_reporting(E_ALL);
ini_set('display_errors', 1);
ini_set('log_errors', 1);

// Load configuration
require_once 'config/config.php';

echo "<h1>üß™ Test API Simulation - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á API importSales</h1>";

try {
    echo "<h2>1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Session</h2>";
    
    // Check if user is logged in
    if (!isset($_SESSION['user_id'])) {
        echo "‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ Session user_id - ‡∏ï‡πâ‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô<br>";
        echo "Session data: <pre>" . print_r($_SESSION, true) . "</pre>";
        
        // Try to set a dummy session for testing
        $_SESSION['user_id'] = 1;
        $_SESSION['username'] = 'test_user';
        echo "‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Session ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö<br>";
    } else {
        echo "‚úÖ ‡∏°‡∏µ Session user_id: " . $_SESSION['user_id'] . "<br>";
    }
    
    echo "<h2>2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î Controller</h2>";
    
    // Load controller
    require_once 'app/controllers/ImportExportController.php';
    $controller = new ImportExportController();
    echo "‚úÖ ImportExportController ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à<br>";
    
    echo "<h2>3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á POST Request</h2>";
    
    // Simulate POST request
    $_SERVER['REQUEST_METHOD'] = 'POST';
    
    // Test 1: No file upload
    echo "<h3>3.1 ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î</h3>";
    ob_start();
    $controller->importSales();
    $output1 = ob_get_clean();
    
    echo "Output: " . htmlspecialchars($output1) . "<br>";
    
    // Test 2: Invalid file upload
    echo "<h3>3.2 ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</h3>";
    $_FILES['csv_file'] = [
        'error' => UPLOAD_ERR_NO_FILE
    ];
    
    ob_start();
    $controller->importSales();
    $output2 = ob_get_clean();
    
    echo "Output: " . htmlspecialchars($output2) . "<br>";
    
    // Test 3: Create a test CSV file
    echo "<h3>3.3 ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå CSV ‡∏à‡∏≥‡∏•‡∏≠‡∏á</h3>";
    
    $testCsvContent = "‡∏ä‡∏∑‡πà‡∏≠,‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•,‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå,‡∏≠‡∏µ‡πÄ‡∏°‡∏•,‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà,‡πÄ‡∏Ç‡∏ï,‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î,‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå,‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞,‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥,‡πÄ‡∏Å‡∏£‡∏î,‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏,‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤,‡∏à‡∏≥‡∏ô‡∏ß‡∏ô,‡∏£‡∏≤‡∏Ñ‡∏≤,‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢\n";
    $testCsvContent .= "‡∏™‡∏°‡∏ä‡∏≤‡∏¢,‡πÉ‡∏à‡∏î‡∏µ,0812345678,somchai@example.com,123 ‡∏ñ.‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó,‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢,‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø,10110,new,cold,C,‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà,‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö,1,1000,2024-01-15\n";
    
    $uploadDir = __DIR__ . '/uploads/';
    if (!is_dir($uploadDir)) {
        mkdir($uploadDir, 0755, true);
    }
    
    $testFile = $uploadDir . 'test_sales.csv';
    file_put_contents($testFile, $testCsvContent);
    
    // Simulate file upload
    $_FILES['csv_file'] = [
        'name' => 'test_sales.csv',
        'type' => 'text/csv',
        'tmp_name' => $testFile,
        'error' => UPLOAD_ERR_OK,
        'size' => filesize($testFile)
    ];
    
    echo "‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå CSV ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à<br>";
    echo "‡πÑ‡∏ü‡∏•‡πå: {$testFile}<br>";
    echo "‡∏Ç‡∏ô‡∏≤‡∏î: " . filesize($testFile) . " bytes<br>";
    
    echo "<h3>3.4 ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ import ‡πÑ‡∏ü‡∏•‡πå CSV</h3>";
    
    ob_start();
    $controller->importSales();
    $output3 = ob_get_clean();
    
    echo "Output: " . htmlspecialchars($output3) . "<br>";
    
    // Clean up test file
    if (file_exists($testFile)) {
        unlink($testFile);
        echo "‚úÖ ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß<br>";
    }
    
    echo "<h2>4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ import-export.php ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á</h2>";
    
    // Test 4: Direct call to import-export.php
    $_GET['action'] = 'importSales';
    
    ob_start();
    include 'import-export.php';
    $output4 = ob_get_clean();
    
    echo "Output: " . htmlspecialchars($output4) . "<br>";
    
    echo "<h2>5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ HTTP Headers</h2>";
    
    // Test 5: Check HTTP headers
    echo "Content-Type: " . (headers_sent() ? 'Headers already sent' : 'Headers not sent yet') . "<br>";
    
    // Test setting headers
    if (!headers_sent()) {
        header('Content-Type: application/json; charset=utf-8');
        echo "‚úÖ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ HTTP Headers ‡πÑ‡∏î‡πâ<br>";
    } else {
        echo "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ HTTP Headers ‡πÑ‡∏î‡πâ (headers already sent)<br>";
    }
    
    echo "<h2>6. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á JavaScript Fetch Request</h2>";
    
    // Test 6: Simulate JavaScript fetch request
    echo "<h3>6.1 ‡∏™‡∏£‡πâ‡∏≤‡∏á FormData ‡∏à‡∏≥‡∏•‡∏≠‡∏á</h3>";
    
    // Create a simple test form
    echo '<form id="testForm" enctype="multipart/form-data">';
    echo '<input type="file" name="csv_file" accept=".csv">';
    echo '<button type="button" onclick="testUpload()">‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î</button>';
    echo '</form>';
    
    echo '<div id="result"></div>';
    
    echo '<script>
    async function testUpload() {
        const form = document.getElementById("testForm");
        const formData = new FormData(form);
        
        try {
            const response = await fetch("import-export.php?action=importSales", {
                method: "POST",
                body: formData
            });
            
            const result = await response.text();
            document.getElementById("result").innerHTML = "<h4>Response:</h4><pre>" + result + "</pre>";
            
            if (!response.ok) {
                document.getElementById("result").innerHTML += "<h4>Error Status:</h4><p>HTTP " + response.status + " " + response.statusText + "</p>";
            }
        } catch (error) {
            document.getElementById("result").innerHTML = "<h4>Error:</h4><p>" + error.message + "</p>";
        }
    }
    </script>';
    
    echo "<h2>‚úÖ ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h2>";
    echo "‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ 500 error ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:<br>";
    echo "1. ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ PHP ‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå<br>";
    echo "2. ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå<br>";
    echo "3. ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•<br>";
    echo "4. Error Log ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå<br>";
    echo "5. ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ HTTP Headers<br>";
    
} catch (Exception $e) {
    echo "<h2>‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h2>";
    echo "Error: " . $e->getMessage() . "<br>";
    echo "Stack trace: <pre>" . $e->getTraceAsString() . "</pre>";
}
?> 