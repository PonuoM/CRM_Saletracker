<?php
/**
 * Test Import CSV - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ import ‡πÑ‡∏ü‡∏•‡πå CSV
 */

// Start session
session_start();

// Set a dummy session for testing
$_SESSION['user_id'] = 1;
$_SESSION['username'] = 'test_user';
$_SESSION['role'] = 'super_admin';

// Load configuration
require_once 'config/config.php';

echo "<h1>üß™ Test Import CSV - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ import ‡πÑ‡∏ü‡∏•‡πå CSV</h1>";

try {
    echo "<h2>1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î Controller</h2>";
    
    // Load controller
    require_once 'app/controllers/ImportExportController.php';
    $controller = new ImportExportController();
    echo "‚úÖ ImportExportController ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à<br>";
    
    echo "<h2>2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î Service</h2>";
    
    // Load service
    require_once 'app/services/ImportExportService.php';
    $service = new ImportExportService();
    echo "‚úÖ ImportExportService ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à<br>";
    
    echo "<h2>3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå CSV ‡∏à‡∏≥‡∏•‡∏≠‡∏á</h2>";
    
    // Create test CSV content
    $testCsvContent = "‡∏ä‡∏∑‡πà‡∏≠,‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•,‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå,‡∏≠‡∏µ‡πÄ‡∏°‡∏•,‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà,‡πÄ‡∏Ç‡∏ï,‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î,‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå,‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞,‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥,‡πÄ‡∏Å‡∏£‡∏î,‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏,‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤,‡∏à‡∏≥‡∏ô‡∏ß‡∏ô,‡∏£‡∏≤‡∏Ñ‡∏≤,‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢\n";
    $testCsvContent .= "‡∏™‡∏°‡∏ä‡∏≤‡∏¢,‡πÉ‡∏à‡∏î‡∏µ,0812345678,somchai@example.com,123 ‡∏ñ.‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó,‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢,‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø,10110,new,cold,C,‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà,‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö,1,1000,2024-01-15\n";
    $testCsvContent .= "‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á,‡∏£‡∏±‡∏Å‡∏î‡∏µ,0898765432,somying@example.com,456 ‡∏ñ.‡∏£‡∏±‡∏ä‡∏î‡∏≤‡∏†‡∏¥‡πÄ‡∏©‡∏Å,‡∏î‡∏¥‡∏ô‡πÅ‡∏î‡∏á,‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø,10400,new,warm,B,‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà,‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö2,2,2000,2024-01-16\n";
    
    $uploadDir = __DIR__ . '/uploads/';
    if (!is_dir($uploadDir)) {
        mkdir($uploadDir, 0755, true);
    }
    
    $testFile = $uploadDir . 'test_sales_import.csv';
    file_put_contents($testFile, $testCsvContent);
    
    echo "‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå CSV ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à<br>";
    echo "‡πÑ‡∏ü‡∏•‡πå: {$testFile}<br>";
    echo "‡∏Ç‡∏ô‡∏≤‡∏î: " . filesize($testFile) . " bytes<br>";
    echo "‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤: <pre>" . htmlspecialchars($testCsvContent) . "</pre>";
    
    echo "<h2>4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ import ‡πÑ‡∏ü‡∏•‡πå CSV ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á</h2>";
    
    // Test direct import
    try {
        $results = $service->importSalesFromCSV($testFile);
        echo "‚úÖ ‡∏Å‡∏≤‡∏£ import ‡πÑ‡∏ü‡∏•‡πå CSV ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à<br>";
        echo "‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: <pre>" . print_r($results, true) . "</pre>";
    } catch (Exception $e) {
        echo "‚ùå ‡∏Å‡∏≤‡∏£ import ‡πÑ‡∏ü‡∏•‡πå CSV ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß<br>";
        echo "Error: " . $e->getMessage() . "<br>";
        echo "Stack trace: <pre>" . $e->getTraceAsString() . "</pre>";
    }
    
    echo "<h2>5. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á POST Request</h2>";
    
    // Simulate POST request
    $_SERVER['REQUEST_METHOD'] = 'POST';
    $_FILES['csv_file'] = [
        'name' => 'test_sales_import.csv',
        'type' => 'text/csv',
        'tmp_name' => $testFile,
        'error' => UPLOAD_ERR_OK,
        'size' => filesize($testFile)
    ];
    
    echo "‚úÖ ‡∏à‡∏≥‡∏•‡∏≠‡∏á POST request ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à<br>";
    
    echo "<h2>6. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ importSales method</h2>";
    
    // Test importSales method
    ob_start();
    $controller->importSales();
    $output = ob_get_clean();
    
    echo "‚úÖ importSales method ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ<br>";
    echo "Output: " . htmlspecialchars($output) . "<br>";
    
    // Try to decode JSON
    $jsonData = json_decode($output, true);
    if ($jsonData) {
        echo "‚úÖ Output ‡πÄ‡∏õ‡πá‡∏ô JSON ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á<br>";
        echo "JSON Data: <pre>" . print_r($jsonData, true) . "</pre>";
    } else {
        echo "‚ùå Output ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà JSON ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á<br>";
        echo "JSON Error: " . json_last_error_msg() . "<br>";
    }
    
    echo "<h2>7. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ import-export.php</h2>";
    
    // Test import-export.php
    $_GET['action'] = 'importSales';
    
    ob_start();
    include 'import-export.php';
    $pageOutput = ob_get_clean();
    
    echo "‚úÖ import-export.php ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ<br>";
    echo "Output: " . htmlspecialchars($pageOutput) . "<br>";
    
    // Try to decode JSON
    $jsonData2 = json_decode($pageOutput, true);
    if ($jsonData2) {
        echo "‚úÖ Page Output ‡πÄ‡∏õ‡πá‡∏ô JSON ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á<br>";
        echo "JSON Data: <pre>" . print_r($jsonData2, true) . "</pre>";
    } else {
        echo "‚ùå Page Output ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà JSON ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á<br>";
        echo "JSON Error: " . json_last_error_msg() . "<br>";
    }
    
    echo "<h2>8. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ HTTP Headers</h2>";
    
    // Check headers
    if (headers_sent()) {
        echo "‚ùå Headers already sent<br>";
    } else {
        echo "‚úÖ Headers not sent yet<br>";
    }
    
    // Clean up test file
    if (file_exists($testFile)) {
        unlink($testFile);
        echo "‚úÖ ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß<br>";
    }
    
    echo "<h2>‚úÖ ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h2>";
    echo "‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ 500 error ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:<br>";
    echo "1. ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ HTTP Headers<br>";
    echo "2. ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå CSV<br>";
    echo "3. ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•<br>";
    echo "4. Error Log ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå<br>";
    
} catch (Exception $e) {
    echo "<h2>‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h2>";
    echo "Error: " . $e->getMessage() . "<br>";
    echo "Stack trace: <pre>" . $e->getTraceAsString() . "</pre>";
}
?> 