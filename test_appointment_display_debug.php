<?php
/**
 * Test Appointment Display Debug
 * ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢
 */

require_once __DIR__ . '/config/config.php';
require_once __DIR__ . '/app/core/Database.php';
require_once __DIR__ . '/app/services/AppointmentService.php';

// ‡πÄ‡∏£‡∏¥‡πà‡∏° session ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
session_start();

// ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£ login
$_SESSION['user_id'] = 1;
$_SESSION['username'] = 'admin';

echo "<h2>üîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢</h2>";

// 1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
echo "<h3>1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h3>";
try {
    $db = new Database();
    echo "‚úÖ ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à<br>";
} catch (Exception $e) {
    echo "‚ùå ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: " . $e->getMessage() . "<br>";
    exit;
}

// 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö AppointmentService
echo "<h3>2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö AppointmentService</h3>";
try {
    $appointmentService = new AppointmentService();
    echo "‚úÖ AppointmentService ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à<br>";
} catch (Exception $e) {
    echo "‚ùå AppointmentService ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: " . $e->getMessage() . "<br>";
    exit;
}

// 3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ ID 1
echo "<h3>3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ ID 1</h3>";
try {
    $result = $appointmentService->getAppointmentsByCustomer(1, 5);
    echo "API Response: <pre>" . print_r($result, true) . "</pre>";
    
    if ($result['success']) {
        echo "‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à<br>";
        echo "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£: " . count($result['data']) . "<br>";
        
        if (count($result['data']) > 0) {
            echo "<h4>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢:</h4>";
            echo "<table border='1' style='border-collapse: collapse; width: 100%;'>";
            echo "<tr><th>ID</th><th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th><th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</th><th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th><th>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏</th></tr>";
            
            foreach ($result['data'] as $appointment) {
                echo "<tr>";
                echo "<td>" . $appointment['appointment_id'] . "</td>";
                echo "<td>" . $appointment['appointment_date'] . "</td>";
                echo "<td>" . $appointment['appointment_type'] . "</td>";
                echo "<td>" . $appointment['appointment_status'] . "</td>";
                echo "<td>" . ($appointment['notes'] ?? '-') . "</td>";
                echo "</tr>";
            }
            echo "</table>";
        } else {
            echo "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢<br>";
        }
    } else {
        echo "‚ùå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: " . $result['message'] . "<br>";
    }
} catch (Exception $e) {
    echo "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " . $e->getMessage() . "<br>";
}

// 4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
echo "<h3>4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á</h3>";
try {
    // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API
    $apiUrl = "api/appointments.php?action=get_by_customer&customer_id=1&limit=5";
    
    // ‡πÉ‡∏ä‡πâ cURL ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $apiUrl);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_COOKIE, "PHPSESSID=" . session_id());
    
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);
    
    echo "HTTP Status Code: " . $httpCode . "<br>";
    echo "Raw Response: <pre>" . htmlspecialchars($response) . "</pre>";
    
    if ($response) {
        $data = json_decode($response, true);
        echo "Decoded Response: <pre>" . print_r($data, true) . "</pre>";
        
        if ($data && isset($data['success'])) {
            if ($data['success']) {
                echo "‚úÖ API ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á<br>";
            } else {
                echo "‚ùå API ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " . ($data['message'] ?? '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏') . "<br>";
            }
        } else {
            echo "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏õ‡∏•‡∏á JSON ‡πÑ‡∏î‡πâ<br>";
        }
    } else {
        echo "‚ùå ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API<br>";
    }
} catch (Exception $e) {
    echo "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API: " . $e->getMessage() . "<br>";
}

// 5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
echo "<h3>5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á</h3>";
try {
    $sql = "SELECT COUNT(*) as total FROM appointments WHERE customer_id = 1";
    $result = $db->query($sql);
    
    if ($result && count($result) > 0) {
        echo "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á: " . $result[0]['total'] . "<br>";
        
        if ($result[0]['total'] > 0) {
            $sql = "SELECT * FROM appointments WHERE customer_id = 1 ORDER BY appointment_date DESC LIMIT 5";
            $appointments = $db->query($sql);
            
            echo "<h4>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á appointments:</h4>";
            echo "<table border='1' style='border-collapse: collapse; width: 100%;'>";
            echo "<tr><th>ID</th><th>Customer ID</th><th>User ID</th><th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th><th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</th><th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th></tr>";
            
            foreach ($appointments as $appointment) {
                echo "<tr>";
                echo "<td>" . $appointment['appointment_id'] . "</td>";
                echo "<td>" . $appointment['customer_id'] . "</td>";
                echo "<td>" . $appointment['user_id'] . "</td>";
                echo "<td>" . $appointment['appointment_date'] . "</td>";
                echo "<td>" . $appointment['appointment_type'] . "</td>";
                echo "<td>" . $appointment['appointment_status'] . "</td>";
                echo "</tr>";
            }
            echo "</table>";
        }
    }
} catch (Exception $e) {
    echo "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á: " . $e->getMessage() . "<br>";
}

// 6. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö JavaScript
echo "<h3>6. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö JavaScript</h3>";
echo "<div id='testAppointmentsList'>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢...</div>";
echo "<button onclick='testLoadAppointments()'>‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</button>";

?>

<script>
function testLoadAppointments() {
    console.log('Testing loadAppointments function...');
    
    const appointmentsList = document.getElementById('testAppointmentsList');
    console.log('appointmentsList element:', appointmentsList);
    
    if (!appointmentsList) {
        console.error('appointmentsList element not found');
        return;
    }
    
    const customerId = 1; // ‡πÉ‡∏ä‡πâ customer ID 1 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    console.log('Customer ID:', customerId);
    
    const apiUrl = `api/appointments.php?action=get_by_customer&customer_id=${customerId}&limit=5`;
    console.log('Calling API:', apiUrl);
    
    fetch(apiUrl)
        .then(response => {
            console.log('API response status:', response.status);
            console.log('API response headers:', response.headers);
            return response.json();
        })
        .then(data => {
            console.log('API response data:', data);
            if (data.success && data.data.length > 0) {
                console.log('Displaying appointments:', data.data);
                displayTestAppointments(data.data);
            } else {
                console.log('No appointments found or API error');
                appointmentsList.innerHTML = '<p class="text-muted text-center mb-0">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢</p>';
            }
        })
        .catch(error => {
            console.error('Error loading appointments:', error);
            appointmentsList.innerHTML = '<p class="text-danger text-center mb-0">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>';
        });
}

function displayTestAppointments(appointments) {
    console.log('displayTestAppointments function called with:', appointments);
    
    const appointmentsList = document.getElementById('testAppointmentsList');
    console.log('appointmentsList element in displayTestAppointments:', appointmentsList);
    
    if (!appointmentsList) {
        console.error('appointmentsList element not found in displayTestAppointments');
        return;
    }
    
    let html = '<div class="table-responsive"><table class="table table-hover">';
    html += '<thead><tr>';
    html += '<th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>';
    html += '<th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</th>';
    html += '<th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>';
    html += '<th>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏</th>';
    html += '</tr></thead><tbody>';
    
    appointments.forEach(appointment => {
        const appointmentDate = new Date(appointment.appointment_date);
        const formattedDate = appointmentDate.toLocaleDateString('th-TH', {
            year: 'numeric',
            month: 'short',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
        });
        
        const typeText = {
            'call': '‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå',
            'meeting': '‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°',
            'presentation': '‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠',
            'followup': '‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°',
            'other': '‡∏≠‡∏∑‡πà‡∏ô‡πÜ'
        }[appointment.appointment_type] || appointment.appointment_type;
        
        const statusText = {
            'scheduled': '‡∏ô‡∏±‡∏î‡πÅ‡∏•‡πâ‡∏ß',
            'confirmed': '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß',
            'completed': '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô',
            'cancelled': '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å',
            'no_show': '‡πÑ‡∏°‡πà‡∏°‡∏≤'
        }[appointment.appointment_status] || appointment.appointment_status;
        
        html += '<tr>';
        html += `<td>${formattedDate}</td>`;
        html += `<td>${typeText}</td>`;
        html += `<td>${statusText}</td>`;
        html += `<td>${appointment.notes || '-'}</td>`;
        html += '</tr>';
    });
    
    html += '</tbody></table></div>';
    
    appointmentsList.innerHTML = html;
    console.log('Appointments displayed successfully');
}

// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
document.addEventListener('DOMContentLoaded', function() {
    console.log('Page loaded, testing appointments...');
    setTimeout(testLoadAppointments, 1000);
});
</script>

<style>
body { font-family: Arial, sans-serif; margin: 20px; }
h2, h3, h4 { color: #333; }
table { margin: 10px 0; }
th, td { padding: 8px; text-align: left; }
th { background-color: #f2f2f2; }
pre { background-color: #f5f5f5; padding: 10px; border-radius: 5px; overflow-x: auto; }
button { padding: 10px 20px; background-color: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; }
button:hover { background-color: #0056b3; }
</style> 