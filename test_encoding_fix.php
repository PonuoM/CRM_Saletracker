<?php
/**
 * Test Encoding Fix - р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╣Бр╕Бр╣Йр╣Др╕Вр╕Ыр╕▒р╕Нр╕лр╕▓ encoding
 */

echo "<h1>ЁЯФз Test Encoding Fix - р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╣Бр╕Бр╣Йр╣Др╕Вр╕Ыр╕▒р╕Нр╕лр╕▓ encoding</h1>";

// 1. р╣Вр╕лр╕ер╕Фр╣Др╕Яр╕ер╣Мр╕Чр╕╡р╣Ир╕Ир╕│р╣Ар╕Ыр╣Зр╕Щ
echo "<h2>1. р╣Вр╕лр╕ер╕Фр╣Др╕Яр╕ер╣Мр╕Чр╕╡р╣Ир╕Ир╕│р╣Ар╕Ыр╣Зр╕Щ</h2>";
try {
    require_once 'config/config.php';
    require_once 'app/core/Database.php';
    require_once 'app/services/ImportExportService.php';
    echo "тЬЕ р╣Вр╕лр╕ер╕Фр╣Др╕Яр╕ер╣Мр╕Чр╕╡р╣Ир╕Ир╕│р╣Ар╕Ыр╣Зр╕Щр╕кр╕│р╣Ар╕гр╣Зр╕И<br>";
} catch (Exception $e) {
    echo "тЭМ Error loading files: " . $e->getMessage() . "<br>";
    exit;
}

// 2. р╕кр╕гр╣Йр╕▓р╕З Service р╣Бр╕ер╕░ Database
echo "<h2>2. р╕кр╕гр╣Йр╕▓р╕З Service р╣Бр╕ер╕░ Database</h2>";
try {
    $service = new ImportExportService();
    $db = new Database();
    echo "тЬЕ р╕кр╕гр╣Йр╕▓р╕З Service р╣Бр╕ер╕░ Database р╕кр╕│р╣Ар╕гр╣Зр╕И<br>";
} catch (Exception $e) {
    echo "тЭМ Error creating objects: " . $e->getMessage() . "<br>";
    exit;
}

// 3. р╕Чр╕Фр╕кр╕нр╕Ъ encoding detection
echo "<h2>3. р╕Чр╕Фр╕кр╕нр╕Ъ encoding detection</h2>";
try {
    $testContent = "р╕Кр╕╖р╣Ир╕н,р╕Щр╕▓р╕бр╕кр╕Бр╕╕р╕е,р╣Ар╕Ър╕нр╕гр╣Мр╣Вр╕Чр╕гр╕ир╕▒р╕Юр╕Чр╣М\nр╕Чр╕Фр╕кр╕нр╕Ъ,р╕гр╕░р╕Ър╕Ъ,0812345678";
    
    // р╕Чр╕Фр╕кр╕нр╕Ъ encoding detection р╕Чр╕╡р╣Ир╣Бр╕Бр╣Йр╣Др╕Вр╣Бр╕ер╣Йр╕з
    $encodings = ['UTF-8', 'ISO-8859-11', 'Windows-874'];
    $detectedEncoding = mb_detect_encoding($testContent, $encodings, true);
    
    if (!$detectedEncoding) {
        $detectedEncoding = 'UTF-8';
    }
    
    echo "тЬЕ Encoding detection р╕кр╕│р╣Ар╕гр╣Зр╕И: " . $detectedEncoding . "<br>";
    echo "тЬЕ р╣Гр╕Кр╣Й encodings: " . json_encode($encodings) . "<br>";
    
} catch (Exception $e) {
    echo "тЭМ Encoding detection Error: " . $e->getMessage() . "<br>";
}

// 4. р╕кр╕гр╣Йр╕▓р╕Зр╣Др╕Яр╕ер╣М CSV р╕Чр╕Фр╕кр╕нр╕Ъ
echo "<h2>4. р╕кр╕гр╣Йр╕▓р╕Зр╣Др╕Яр╕ер╣М CSV р╕Чр╕Фр╕кр╕нр╕Ъ</h2>";
try {
    $uploadDir = __DIR__ . '/uploads/';
    if (!is_dir($uploadDir)) {
        mkdir($uploadDir, 0755, true);
    }
    
    $testFile = $uploadDir . 'test_encoding_fix.csv';
    $csvContent = "р╕Кр╕╖р╣Ир╕н,р╕Щр╕▓р╕бр╕кр╕Бр╕╕р╕е,р╣Ар╕Ър╕нр╕гр╣Мр╣Вр╕Чр╕гр╕ир╕▒р╕Юр╕Чр╣М,р╕нр╕╡р╣Ар╕бр╕е,р╕Чр╕╡р╣Ир╕нр╕вр╕╣р╣И,р╣Ар╕Вр╕Х,р╕Ир╕▒р╕Зр╕лр╕зр╕▒р╕Ф,р╕гр╕лр╕▒р╕кр╣Др╕Ыр╕гр╕йр╕Ур╕╡р╕вр╣М,р╕Кр╕╖р╣Ир╕нр╕кр╕┤р╕Щр╕Др╣Йр╕▓,р╕Ир╕│р╕Щр╕зр╕Щ,р╕гр╕▓р╕Др╕▓р╕Хр╣Ир╕нр╕Кр╕┤р╣Йр╕Щ,р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕кр╕▒р╣Ир╕Зр╕Лр╕╖р╣Йр╕н,р╕лр╕бр╕▓р╕вр╣Ар╕лр╕Хр╕╕\n";
    $csvContent .= "р╕Чр╕Фр╕кр╕нр╕Ъ,р╕гр╕░р╕Ър╕Ъ,0812345678,test@example.com,123 р╕Ц.р╕Чр╕Фр╕кр╕нр╕Ъ,р╣Ар╕Вр╕Хр╕Чр╕Фр╕кр╕нр╕Ъ,р╕Ир╕▒р╕Зр╕лр╕зр╕▒р╕Фр╕Чр╕Фр╕кр╕нр╕Ъ,10000,р╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Чр╕Фр╕кр╕нр╕Ъ,1,1000,2024-01-15,р╕Чр╕Фр╕кр╕нр╕Ър╕гр╕░р╕Ър╕Ъ\n";
    
    file_put_contents($testFile, $csvContent);
    echo "тЬЕ р╕кр╕гр╣Йр╕▓р╕Зр╣Др╕Яр╕ер╣М CSV р╕Ир╕│р╕ер╕нр╕Зр╕кр╕│р╣Ар╕гр╣Зр╕И<br>";
    echo "р╣Др╕Яр╕ер╣М: {$testFile}<br>";
    echo "р╕Вр╕Щр╕▓р╕Ф: " . filesize($testFile) . " bytes<br>";
} catch (Exception $e) {
    echo "тЭМ CSV Creation Error: " . $e->getMessage() . "<br>";
    exit;
}

// 5. р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕г import
echo "<h2>5. р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕г import</h2>";
try {
    echo "р╣Ар╕гр╕┤р╣Ир╕бр╕Бр╕▓р╕г import...<br>";
    
    // р╣Ар╕Ыр╕┤р╕Ф error reporting
    error_reporting(E_ALL);
    ini_set('display_errors', 1);
    
    $results = $service->importSalesFromCSV($testFile);
    
    echo "тЬЕ Import р╕кр╕│р╣Ар╕гр╣Зр╕И<br>";
    echo "р╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣М: <pre>" . print_r($results, true) . "</pre><br>";
    
} catch (Exception $e) {
    echo "тЭМ Import Error: " . $e->getMessage() . "<br>";
    echo "Stack trace: <pre>" . $e->getTraceAsString() . "</pre><br>";
}

// 6. р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕г import customers only
echo "<h2>6. р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕г import customers only</h2>";
try {
    echo "р╣Ар╕гр╕┤р╣Ир╕бр╕Бр╕▓р╕г import customers only...<br>";
    
    $results = $service->importCustomersOnlyFromCSV($testFile);
    
    echo "тЬЕ Import customers only р╕кр╕│р╣Ар╕гр╣Зр╕И<br>";
    echo "р╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣М: <pre>" . print_r($results, true) . "</pre><br>";
    
} catch (Exception $e) {
    echo "тЭМ Import customers only Error: " . $e->getMessage() . "<br>";
    echo "Stack trace: <pre>" . $e->getTraceAsString() . "</pre><br>";
}

// 7. р╕Чр╕│р╕Др╕зр╕▓р╕бр╕кр╕░р╕нр╕▓р╕Ф
echo "<h2>7. р╕Чр╕│р╕Др╕зр╕▓р╕бр╕кр╕░р╕нр╕▓р╕Ф</h2>";
try {
    if (file_exists($testFile)) {
        unlink($testFile);
        echo "тЬЕ р╕ер╕Ър╣Др╕Яр╕ер╣Мр╕Чр╕Фр╕кр╕нр╕Ър╕кр╕│р╣Ар╕гр╣Зр╕И<br>";
    }
} catch (Exception $e) {
    echo "тЭМ Cleanup Error: " . $e->getMessage() . "<br>";
}

echo "<h2>ЁЯОп р╕кр╕гр╕╕р╕Ыр╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ъ</h2>";
echo "р╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╣Бр╕Бр╣Йр╣Др╕Вр╕Ыр╕▒р╕Нр╕лр╕▓ encoding р╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щр╣Бр╕ер╣Йр╕з<br>";
echo "р╕лр╕▓р╕Бр╣Др╕бр╣Ир╕Юр╕Ъ error р╣Бр╕кр╕Фр╕Зр╕зр╣Ир╕▓р╕Бр╕▓р╕гр╣Бр╕Бр╣Йр╣Др╕Вр╕кр╕│р╣Ар╕гр╣Зр╕Ир╣Бр╕ер╣Йр╕з! ЁЯЪА<br>";
?> 