<?php
/**
 * Create Test Scenarios
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö basket management
 */

// Enable error reporting
error_reporting(E_ALL);
ini_set('display_errors', 1);

echo "<h1>üß™ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö Basket Management</h1>";

try {
    require_once 'config/config.php';
    require_once 'app/core/Database.php';
    
    $db = new Database();
    $pdo = $db->getConnection();
    
    echo "<h2>üìã ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h2>";
    
    if (isset($_GET['scenario'])) {
        $scenario = $_GET['scenario'];
        
        echo "<div style='background: #fff3cd; padding: 20px; border-radius: 5px; margin: 20px 0;'>";
        echo "<h3>üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå: $scenario</h3>";
        
        switch ($scenario) {
            case 'new_customer_timeout':
                createNewCustomerTimeoutScenario($pdo);
                break;
            case 'existing_customer_timeout':
                createExistingCustomerTimeoutScenario($pdo);
                break;
            case 'waiting_to_distribution':
                createWaitingToDistributionScenario($pdo);
                break;
            case 'mixed_scenario':
                createMixedScenario($pdo);
                break;
            case 'reset_all':
                resetAllScenarios($pdo);
                break;
        }
        
        echo "</div>";
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á
        showCurrentStats($pdo);
        
    } else {
        // ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        echo "<div style='background: #f8f9fa; padding: 20px; border-radius: 5px;'>";
        echo "<h3>üéØ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:</h3>";
        
        echo "<div style='margin: 10px 0;'>";
        echo "<a href='?scenario=new_customer_timeout' style='background: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; margin: 5px; display: inline-block;'>";
        echo "üÜï ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤ (>30 ‡∏ß‡∏±‡∏ô)";
        echo "</a>";
        echo "</div>";
        
        echo "<div style='margin: 10px 0;'>";
        echo "<a href='?scenario=existing_customer_timeout' style='background: #28a745; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; margin: 5px; display: inline-block;'>";
        echo "üë• ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤‡πÑ‡∏°‡πà‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏≤‡∏ô (>90 ‡∏ß‡∏±‡∏ô)";
        echo "</a>";
        echo "</div>";
        
        echo "<div style='margin: 10px 0;'>";
        echo "<a href='?scenario=waiting_to_distribution' style='background: #17a2b8; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; margin: 5px; display: inline-block;'>";
        echo "‚è≥ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô waiting ‡∏Ñ‡∏£‡∏ö 30 ‡∏ß‡∏±‡∏ô";
        echo "</a>";
        echo "</div>";
        
        echo "<div style='margin: 10px 0;'>";
        echo "<a href='?scenario=mixed_scenario' style='background: #6f42c1; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; margin: 5px; display: inline-block;'>";
        echo "üé≠ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏£‡∏ß‡∏° (‡∏ó‡∏∏‡∏Å‡πÅ‡∏ö‡∏ö)";
        echo "</a>";
        echo "</div>";
        
        echo "<div style='margin: 10px 0;'>";
        echo "<a href='?scenario=reset_all' style='background: #dc3545; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; margin: 5px; display: inline-block;'>";
        echo "üîÑ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö";
        echo "</a>";
        echo "</div>";
        
        echo "</div>";
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
        showCurrentStats($pdo);
    }
    
} catch (Exception $e) {
    echo "<div style='background: #f8d7da; padding: 20px; border-radius: 5px;'>";
    echo "<h3>‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</h3>";
    echo "<p>" . $e->getMessage() . "</p>";
    echo "</div>";
}

function createNewCustomerTimeoutScenario($pdo) {
    echo "<h4>üÜï ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå: ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤</h4>";
    
    // ‡∏´‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ 5 ‡∏Ñ‡∏ô‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà assigned
    $sql = "SELECT customer_id FROM customers WHERE basket_type = 'assigned' LIMIT 5";
    $customers = $pdo->query($sql)->fetchAll(PDO::FETCH_COLUMN);
    
    if (empty($customers)) {
        echo "<p style='color: red;'>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô assigned basket</p>";
        return;
    }
    
    $count = 0;
    foreach ($customers as $customerId) {
        // ‡∏ï‡∏±‡πâ‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà assigned ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô 35 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß (‡πÄ‡∏Å‡∏¥‡∏ô 30 ‡∏ß‡∏±‡∏ô)
        $sql = "UPDATE customers SET assigned_at = DATE_SUB(NOW(), INTERVAL 35 DAY) WHERE customer_id = ?";
        $stmt = $pdo->prepare($sql);
        $stmt->execute([$customerId]);
        $count++;
    }
    
    echo "<p style='color: green;'>‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤: $count ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>";
    echo "<p><small>‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ assigned_at ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô 35 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß</small></p>";
}

function createExistingCustomerTimeoutScenario($pdo) {
    echo "<h4>üë• ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå: ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤‡πÑ‡∏°‡πà‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏≤‡∏ô</h4>";
    
    // ‡∏´‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå
    $sql = "SELECT DISTINCT c.customer_id 
            FROM customers c 
            INNER JOIN orders o ON c.customer_id = o.customer_id 
            WHERE c.basket_type = 'assigned' 
            LIMIT 3";
    $customers = $pdo->query($sql)->fetchAll(PDO::FETCH_COLUMN);
    
    if (empty($customers)) {
        echo "<p style='color: red;'>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå</p>";
        return;
    }
    
    $count = 0;
    foreach ($customers as $customerId) {
        // ‡∏ï‡∏±‡πâ‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô 100 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß (‡πÄ‡∏Å‡∏¥‡∏ô 90 ‡∏ß‡∏±‡∏ô)
        $sql = "UPDATE orders SET order_date = DATE_SUB(NOW(), INTERVAL 100 DAY) WHERE customer_id = ?";
        $stmt = $pdo->prepare($sql);
        $stmt->execute([$customerId]);
        $count++;
    }
    
    echo "<p style='color: green;'>‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏≤‡∏ô: $count ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>";
    echo "<p><small>‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ order_date ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô 100 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß</small></p>";
}

function createWaitingToDistributionScenario($pdo) {
    echo "<h4>‚è≥ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå: ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô waiting ‡∏Ñ‡∏£‡∏ö 30 ‡∏ß‡∏±‡∏ô</h4>";
    
    // ‡∏´‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ 2 ‡∏Ñ‡∏ô‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà assigned
    $sql = "SELECT customer_id FROM customers WHERE basket_type = 'assigned' LIMIT 2";
    $customers = $pdo->query($sql)->fetchAll(PDO::FETCH_COLUMN);
    
    if (empty($customers)) {
        echo "<p style='color: red;'>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô assigned basket</p>";
        return;
    }
    
    $count = 0;
    foreach ($customers as $customerId) {
        // ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ waiting ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà recall ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô 35 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß
        $sql = "UPDATE customers SET 
                basket_type = 'waiting',
                recall_at = DATE_SUB(NOW(), INTERVAL 35 DAY),
                recall_reason = 'test_scenario'
                WHERE customer_id = ?";
        $stmt = $pdo->prepare($sql);
        $stmt->execute([$customerId]);
        $count++;
    }
    
    echo "<p style='color: green;'>‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô waiting ‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏ö 30 ‡∏ß‡∏±‡∏ô: $count ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>";
    echo "<p><small>‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ waiting ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ recall_at ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô 35 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß</small></p>";
}

function createMixedScenario($pdo) {
    echo "<h4>üé≠ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏£‡∏ß‡∏°: ‡∏ó‡∏∏‡∏Å‡πÅ‡∏ö‡∏ö</h4>";
    
    createNewCustomerTimeoutScenario($pdo);
    createExistingCustomerTimeoutScenario($pdo);
    createWaitingToDistributionScenario($pdo);
    
    echo "<p style='color: blue;'>‚ÑπÔ∏è ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡πÅ‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß</p>";
}

function resetAllScenarios($pdo) {
    echo "<h4>üîÑ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h4>";
    
    try {
        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ assigned
        $sql = "UPDATE customers SET 
                basket_type = 'assigned',
                recall_at = NULL,
                recall_reason = NULL
                WHERE recall_reason = 'test_scenario' OR basket_type = 'waiting'";
        $stmt = $pdo->prepare($sql);
        $stmt->execute();
        $resetCount = $stmt->rowCount();
        
        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï assigned_at ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
        $sql = "UPDATE customers SET assigned_at = NOW() WHERE assigned_at < DATE_SUB(NOW(), INTERVAL 30 DAY)";
        $stmt = $pdo->prepare($sql);
        $stmt->execute();
        $assignedCount = $stmt->rowCount();
        
        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï order_date ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
        $sql = "UPDATE orders SET order_date = NOW() WHERE order_date < DATE_SUB(NOW(), INTERVAL 90 DAY)";
        $stmt = $pdo->prepare($sql);
        $stmt->execute();
        $orderCount = $stmt->rowCount();
        
        echo "<p style='color: green;'>‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô</p>";
        echo "<ul>";
        echo "<li>‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: $resetCount ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</li>";
        echo "<li>‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï assigned_at: $assignedCount ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</li>";
        echo "<li>‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï order_date: $orderCount ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</li>";
        echo "</ul>";
        
    } catch (Exception $e) {
        echo "<p style='color: red;'>‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï: " . $e->getMessage() . "</p>";
    }
}

function showCurrentStats($pdo) {
    echo "<h3>üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô</h3>";
    
    // ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
    $sql = "SELECT basket_type, COUNT(*) as count FROM customers GROUP BY basket_type";
    $stats = $pdo->query($sql)->fetchAll(PDO::FETCH_ASSOC);
    
    echo "<table border='1' style='border-collapse: collapse; margin: 10px 0;'>";
    echo "<tr><th>Basket Type</th><th>Count</th></tr>";
    foreach ($stats as $stat) {
        echo "<tr><td>" . ($stat['basket_type'] ?: 'NULL') . "</td><td>" . $stat['count'] . "</td></tr>";
    }
    echo "</table>";
    
    // ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£ recall
    echo "<h4>üîç ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£ recall (‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç)</h4>";
    
    // 1. ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤
    $sql = "SELECT COUNT(*) as count FROM customers 
            WHERE basket_type = 'assigned'
            AND assigned_at < DATE_SUB(NOW(), INTERVAL 30 DAY)
            AND customer_id NOT IN (
                SELECT DISTINCT customer_id FROM orders 
                WHERE created_at > assigned_at
            )";
    $newTimeout = $pdo->query($sql)->fetch(PDO::FETCH_ASSOC)['count'];
    
    // 2. ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤‡πÑ‡∏°‡πà‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏≤‡∏ô
    $sql = "SELECT COUNT(DISTINCT c.customer_id) as count
            FROM customers c
            WHERE c.basket_type = 'assigned'
            AND c.customer_id IN (
                SELECT customer_id FROM orders 
                GROUP BY customer_id 
                HAVING MAX(order_date) < DATE_SUB(NOW(), INTERVAL 90 DAY)
            )";
    $existingTimeout = $pdo->query($sql)->fetch(PDO::FETCH_ASSOC)['count'];
    
    // 3. ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô waiting ‡∏Ñ‡∏£‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
    $sql = "SELECT COUNT(*) as count FROM customers 
            WHERE basket_type = 'waiting'
            AND recall_at < DATE_SUB(NOW(), INTERVAL 30 DAY)";
    $waitingReady = $pdo->query($sql)->fetch(PDO::FETCH_ASSOC)['count'];
    
    echo "<table border='1' style='border-collapse: collapse; margin: 10px 0;'>";
    echo "<tr><th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</th><th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th></tr>";
    echo "<tr><td>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤ (>30 ‡∏ß‡∏±‡∏ô)</td><td style='color: " . ($newTimeout > 0 ? 'green' : 'gray') . ";'>$newTimeout</td></tr>";
    echo "<tr><td>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤‡πÑ‡∏°‡πà‡∏ã‡∏∑‡πâ‡∏≠‡∏ô‡∏≤‡∏ô (>90 ‡∏ß‡∏±‡∏ô)</td><td style='color: " . ($existingTimeout > 0 ? 'green' : 'gray') . ";'>$existingTimeout</td></tr>";
    echo "<tr><td>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô waiting ‡∏Ñ‡∏£‡∏ö 30 ‡∏ß‡∏±‡∏ô</td><td style='color: " . ($waitingReady > 0 ? 'green' : 'gray') . ";'>$waitingReady</td></tr>";
    echo "</table>";
}

echo "<div style='margin: 20px 0;'>";
echo "<a href='manual_test_cron.php' style='background: #28a745; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; margin-right: 10px;'>üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Basket Management</a>";
echo "<a href='?' style='background: #6c757d; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;'>üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä</a>";
echo "</div>";

?>
