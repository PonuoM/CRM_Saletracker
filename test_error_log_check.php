<?php
/**
 * Test Error Log Check - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö error log ‡πÅ‡∏•‡∏∞ debug importSalesFromCSV
 */

echo "<h1>üîç Test Error Log Check - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö error log ‡πÅ‡∏•‡∏∞ debug importSalesFromCSV</h1>";

// 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö error log path
echo "<h2>1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö error log path</h2>";
$errorLogPath = ini_get('error_log');
echo "Error log path: " . ($errorLogPath ?: 'Not set') . "<br>";

// 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô error log
echo "<h2>2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô error log</h2>";
error_log("Test error log entry from test_error_log_check.php");
echo "‚úÖ ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô error log ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à<br>";

// 3. ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
echo "<h2>3. ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô</h2>";
try {
    require_once 'config/config.php';
    require_once 'app/core/Database.php';
    require_once 'app/services/ImportExportService.php';
    echo "‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à<br>";
} catch (Exception $e) {
    echo "‚ùå Error loading files: " . $e->getMessage() . "<br>";
    exit;
}

// 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á Service ‡πÅ‡∏•‡∏∞ Database
echo "<h2>4. ‡∏™‡∏£‡πâ‡∏≤‡∏á Service ‡πÅ‡∏•‡∏∞ Database</h2>";
try {
    $service = new ImportExportService();
    $db = new Database();
    echo "‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Service ‡πÅ‡∏•‡∏∞ Database ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à<br>";
} catch (Exception $e) {
    echo "‚ùå Error creating objects: " . $e->getMessage() . "<br>";
    exit;
}

// 5. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå CSV ‡∏ó‡∏î‡∏™‡∏≠‡∏ö
echo "<h2>5. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå CSV ‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h2>";
try {
    $uploadDir = __DIR__ . '/uploads/';
    if (!is_dir($uploadDir)) {
        mkdir($uploadDir, 0755, true);
    }
    
    $testFile = $uploadDir . 'test_error_log.csv';
    $csvContent = "‡∏ä‡∏∑‡πà‡∏≠,‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•,‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå,‡∏≠‡∏µ‡πÄ‡∏°‡∏•,‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà,‡πÄ‡∏Ç‡∏ï,‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î,‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå,‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤,‡∏à‡∏≥‡∏ô‡∏ß‡∏ô,‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏ä‡∏¥‡πâ‡∏ô,‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠,‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏\n";
    $csvContent .= "‡∏ó‡∏î‡∏™‡∏≠‡∏ö,‡∏£‡∏∞‡∏ö‡∏ö,0812345678,test@example.com,123 ‡∏ñ.‡∏ó‡∏î‡∏™‡∏≠‡∏ö,‡πÄ‡∏Ç‡∏ï‡∏ó‡∏î‡∏™‡∏≠‡∏ö,‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏î‡∏™‡∏≠‡∏ö,10000,‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö,1,1000,2024-01-15,‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö\n";
    
    file_put_contents($testFile, $csvContent);
    echo "‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå CSV ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à<br>";
    echo "‡πÑ‡∏ü‡∏•‡πå: {$testFile}<br>";
    echo "‡∏Ç‡∏ô‡∏≤‡∏î: " . filesize($testFile) . " bytes<br>";
} catch (Exception $e) {
    echo "‚ùå CSV Creation Error: " . $e->getMessage() . "<br>";
    exit;
}

// 6. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ import ‡∏û‡∏£‡πâ‡∏≠‡∏° error handling
echo "<h2>6. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ import ‡∏û‡∏£‡πâ‡∏≠‡∏° error handling</h2>";

// ‡πÄ‡∏õ‡∏¥‡∏î error reporting
error_reporting(E_ALL);
ini_set('display_errors', 1);

try {
    echo "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£ import...<br>";
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ importSalesFromCSV method
    $results = $service->importSalesFromCSV($testFile);
    
    echo "‚úÖ Import ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à<br>";
    echo "‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: <pre>" . print_r($results, true) . "</pre><br>";
    
} catch (Exception $e) {
    echo "‚ùå Import Error: " . $e->getMessage() . "<br>";
    echo "Stack trace: <pre>" . $e->getTraceAsString() . "</pre><br>";
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö error log
    echo "<h3>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Error Log:</h3>";
    $errorLog = error_get_last();
    if ($errorLog) {
        echo "Last Error: <pre>" . print_r($errorLog, true) . "</pre><br>";
    }
}

// 7. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö error log ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å import
echo "<h2>7. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö error log ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å import</h2>";
if ($errorLogPath && file_exists($errorLogPath)) {
    echo "Error log file exists<br>";
    $logSize = filesize($errorLogPath);
    echo "Error log size: {$logSize} bytes<br>";
    
    if ($logSize > 0) {
        $recentLogs = file_get_contents($errorLogPath);
        if (strlen($recentLogs) > 2000) {
            $recentLogs = substr($recentLogs, -2000);
        }
        echo "Recent error logs:<br>";
        echo "<pre>" . htmlspecialchars($recentLogs) . "</pre>";
    }
} else {
    echo "Error log file does not exist or not configured<br>";
}

// 8. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ method ‡∏≠‡∏∑‡πà‡∏ô‡πÜ
echo "<h2>8. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ method ‡∏≠‡∏∑‡πà‡∏ô‡πÜ</h2>";

try {
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö getSalesColumnMap method
    $reflection = new ReflectionClass($service);
    $getSalesColumnMapMethod = $reflection->getMethod('getSalesColumnMap');
    $getSalesColumnMapMethod->setAccessible(true);
    $columnMap = $getSalesColumnMapMethod->invoke($service);
    
    echo "‚úÖ getSalesColumnMap method ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ<br>";
    echo "Column map: " . json_encode($columnMap) . "<br>";
    
} catch (Exception $e) {
    echo "‚ùå getSalesColumnMap Error: " . $e->getMessage() . "<br>";
}

// 9. ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î
echo "<h2>9. ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î</h2>";
try {
    if (file_exists($testFile)) {
        unlink($testFile);
        echo "‚úÖ ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à<br>";
    }
} catch (Exception $e) {
    echo "‚ùå Cleanup Error: " . $e->getMessage() . "<br>";
}

echo "<h2>üéØ ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h2>";
echo "‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÅ‡∏•‡∏∞ error log ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á<br>";
?> 