<?php
/**
 * Test SQL Fix - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤ SQL Syntax
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ tableExists method ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
 */

echo "<h1>üß™ Test SQL Fix - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤ SQL Syntax</h1>";

// 1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
echo "<h2>1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô</h2>";
try {
    require_once 'config/config.php';
    require_once 'app/core/Database.php';
    require_once 'app/services/ImportExportService.php';
    echo "‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à<br>";
} catch (Exception $e) {
    echo "‚ùå Error loading files: " . $e->getMessage() . "<br>";
    exit;
}

// 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Database tableExists method
echo "<h2>2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Database tableExists method</h2>";
try {
    $db = new Database();
    $tables = ['customers', 'orders', 'customer_activities', 'non_existent_table'];
    
    foreach ($tables as $table) {
        $exists = $db->tableExists($table);
        if ($exists) {
            echo "‚úÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á {$table} ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà<br>";
        } else {
            echo "‚ùå ‡∏ï‡∏≤‡∏£‡∏≤‡∏á {$table} ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà<br>";
        }
    }
    echo "‚úÖ Database tableExists method ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥<br>";
} catch (Exception $e) {
    echo "‚ùå Database tableExists Error: " . $e->getMessage() . "<br>";
}

// 3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö ImportExportService tableExists method
echo "<h2>3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö ImportExportService tableExists method</h2>";
try {
    $service = new ImportExportService();
    
    // ‡πÉ‡∏ä‡πâ reflection ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á private method
    $reflection = new ReflectionClass($service);
    $tableExistsMethod = $reflection->getMethod('tableExists');
    $tableExistsMethod->setAccessible(true);
    
    $tables = ['customers', 'orders', 'customer_activities', 'non_existent_table'];
    
    foreach ($tables as $table) {
        $exists = $tableExistsMethod->invoke($service, $table);
        if ($exists) {
            echo "‚úÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á {$table} ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà<br>";
        } else {
            echo "‚ùå ‡∏ï‡∏≤‡∏£‡∏≤‡∏á {$table} ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà<br>";
        }
    }
    echo "‚úÖ ImportExportService tableExists method ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥<br>";
} catch (Exception $e) {
    echo "‚ùå ImportExportService tableExists Error: " . $e->getMessage() . "<br>";
}

// 4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ query ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á
echo "<h2>4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ query ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á</h2>";
try {
    $db = new Database();
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö query ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    $customers = $db->fetchAll("SELECT COUNT(*) as count FROM customers");
    echo "‚úÖ Query customers: " . $customers[0]['count'] . " ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£<br>";
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö query ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå
    $orders = $db->fetchAll("SELECT COUNT(*) as count FROM orders");
    echo "‚úÖ Query orders: " . $orders[0]['count'] . " ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£<br>";
    
    echo "‚úÖ ‡∏Å‡∏≤‡∏£ query ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥<br>";
} catch (Exception $e) {
    echo "‚ùå Query Error: " . $e->getMessage() . "<br>";
}

echo "<h2>‚úÖ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô</h2>";
echo "<p>‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏ö error ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç SQL syntax ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!</p>";
?> 