<?php
/**
 * ‡∏ó‡∏î‡∏™‡∏≠‡∏ö WorkflowService ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞
 */

require_once 'config/config.php';
require_once 'app/core/Database.php';
require_once 'app/services/WorkflowService.php';

echo "<h2>üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö WorkflowService</h2>\n";

try {
    $db = new Database();
    $workflowService = new WorkflowService();
    
    echo "‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à\n";
    
    // 1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    echo "<h3>1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</h3>\n";
    
    $customers = $db->fetchAll(
        "SELECT customer_id, first_name, last_name, basket_type, assigned_at, customer_time_expiry, customer_time_extension 
         FROM customers 
         WHERE assigned_at IS NOT NULL 
         LIMIT 3"
    );
    
    if ($customers) {
        echo "‚úÖ ‡∏û‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ assigned_at: " . count($customers) . " ‡∏£‡∏≤‡∏¢\n";
        foreach ($customers as $customer) {
            echo "   - {$customer['first_name']} {$customer['last_name']} (ID: {$customer['customer_id']})\n";
            echo "     basket_type: {$customer['basket_type']}\n";
            echo "     assigned_at: {$customer['assigned_at']}\n";
            echo "     customer_time_expiry: {$customer['customer_time_expiry']}\n";
            echo "     customer_time_extension: {$customer['customer_time_extension']}\n";
        }
    } else {
        echo "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ assigned_at\n";
        exit;
    }
    
    // 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô autoExtendTimeOnActivity
    echo "<h3>2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô autoExtendTimeOnActivity</h3>\n";
    
    $testCustomer = $customers[0];
    $customerId = $testCustomer['customer_id'];
    
    echo "üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: {$testCustomer['first_name']} {$testCustomer['last_name']} (ID: {$customerId})\n";
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    $beforeData = $db->fetchOne(
        "SELECT assigned_at, customer_time_expiry, customer_time_extension 
         FROM customers 
         WHERE customer_id = ?",
        [$customerId]
    );
    
    echo "üìÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:\n";
    echo "   - assigned_at: {$beforeData['assigned_at']}\n";
    echo "   - customer_time_expiry: {$beforeData['customer_time_expiry']}\n";
    echo "   - customer_time_extension: {$beforeData['customer_time_extension']}\n";
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô autoExtendTimeOnActivity
    $result = $workflowService->autoExtendTimeOnActivity($customerId, 'order', 1);
    
    echo "üîÑ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö autoExtendTimeOnActivity:\n";
    echo "   - success: " . ($result['success'] ? 'true' : 'false') . "\n";
    echo "   - message: {$result['message']}\n";
    
    if (isset($result['extension_days'])) {
        echo "   - extension_days: {$result['extension_days']}\n";
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    $afterData = $db->fetchOne(
        "SELECT assigned_at, customer_time_expiry, customer_time_extension 
         FROM customers 
         WHERE customer_id = ?",
        [$customerId]
    );
    
    echo "üìÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:\n";
    echo "   - assigned_at: {$afterData['assigned_at']}\n";
    echo "   - customer_time_expiry: {$afterData['customer_time_expiry']}\n";
    echo "   - customer_time_extension: {$afterData['customer_time_extension']}\n";
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
    if ($beforeData['assigned_at'] !== $afterData['assigned_at']) {
        echo "‚úÖ assigned_at ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏•‡πâ‡∏ß\n";
    } else {
        echo "‚ùå assigned_at ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô\n";
    }
    
    if ($beforeData['customer_time_expiry'] !== $afterData['customer_time_expiry']) {
        echo "‚úÖ customer_time_expiry ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏•‡πâ‡∏ß\n";
    } else {
        echo "‚ùå customer_time_expiry ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô\n";
    }
    
    if ($beforeData['customer_time_extension'] !== $afterData['customer_time_extension']) {
        echo "‚úÖ customer_time_extension ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏•‡πâ‡∏ß\n";
    } else {
        echo "‚ùå customer_time_extension ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô\n";
    }
    
    // 3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    echo "<h3>3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</h3>\n";
    
    $activities = $db->fetchAll(
        "SELECT * FROM customer_activities 
         WHERE customer_id = ? 
         ORDER BY created_at DESC 
         LIMIT 3",
        [$customerId]
    );
    
    if ($activities) {
        echo "üìã ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:\n";
        foreach ($activities as $activity) {
            echo "   - {$activity['activity_type']}: {$activity['description']} ({$activity['created_at']})\n";
        }
    } else {
        echo "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°\n";
    }
    
    // 4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô getCustomersForExtension
    echo "<h3>4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô getCustomersForExtension</h3>\n";
    
    $extensionCustomers = $workflowService->getCustomersForExtension();
    
    if ($extensionCustomers) {
        echo "‚úÖ ‡∏û‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ß‡∏•‡∏≤: " . count($extensionCustomers) . " ‡∏£‡∏≤‡∏¢\n";
        foreach (array_slice($extensionCustomers, 0, 3) as $customer) {
            echo "   - {$customer['customer_name']} (ID: {$customer['customer_id']})\n";
        }
    } else {
        echo "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ß‡∏•‡∏≤\n";
    }
    
    // 5. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô getWorkflowStats
    echo "<h3>5. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô getWorkflowStats</h3>\n";
    
    $stats = $workflowService->getWorkflowStats();
    
    echo "üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ Workflow:\n";
    echo "   - pending_recall: {$stats['pending_recall']}\n";
    echo "   - new_customer_timeout: {$stats['new_customer_timeout']}\n";
    echo "   - existing_customer_timeout: {$stats['existing_customer_timeout']}\n";
    echo "   - active_today: {$stats['active_today']}\n";
    
} catch (Exception $e) {
    echo "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " . $e->getMessage() . "\n";
    echo "Stack trace: " . $e->getTraceAsString() . "\n";
}
?> 